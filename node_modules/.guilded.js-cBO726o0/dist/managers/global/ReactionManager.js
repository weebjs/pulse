"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalReactionManager = void 0;
const CacheableStructManager_1 = require("./CacheableStructManager");
/**
 * A class representing a global reaction manager that extends the CacheableStructManager class.
 */
class GlobalReactionManager extends CacheableStructManager_1.CacheableStructManager {
    get shouldCacheReaction() {
        var _a;
        return ((_a = this.client.options.cache) === null || _a === void 0 ? void 0 : _a.cacheMessageReactions) !== false;
    }
    /**
     * Adds a reaction emote to a message.
     * @param channelId The ID of the channel where the message was sent.
     * @param contentId The ID of the message.
     * @param emoteId The ID of the emote to add.
     * @returns A Promise that resolves with no value upon successful completion.
     */
    create(channelId, contentId, emoteId) {
        return this.client.rest.router
            .addReactionEmote(channelId, contentId, emoteId)
            .then(() => void 0);
    }
    /**
     * Deletes a reaction emote from a message.
     * @param channelId The ID of the channel where the message was sent.
     * @param contentId The ID of the message.
     * @param emoteId The ID of the emote to delete.
     * @returns A Promise that resolves with no value upon successful completion.
     */
    delete(channelId, contentId, emoteId) {
        return this.client.rest.router
            .deleteReactionEmote(channelId, contentId, emoteId)
            .then(() => void 0);
    }
}
exports.GlobalReactionManager = GlobalReactionManager;
//# sourceMappingURL=ReactionManager.js.map