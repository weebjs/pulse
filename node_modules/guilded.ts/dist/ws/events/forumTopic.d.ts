import { WSEvents } from 'guilded-api-typings';
import { Client } from '../../structures/Client';
/**
 * Handle the ForumTopicCreated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function created(client: Client, data: WSEvents['ForumTopicCreated']): Promise<void>;
/**
 * Handle the ForumTopicUpdated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function updated(client: Client, data: WSEvents['ForumTopicUpdated']): Promise<void>;
/**
 * Handle the ForumTopicDeleted event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function deleted(client: Client, data: WSEvents['ForumTopicDeleted']): Promise<void>;
/**
 * Handle the ForumTopicPinned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function pinned(client: Client, data: WSEvents['ForumTopicPinned']): Promise<void>;
/**
 * Handle the ForumTopicUnpinned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function unpinned(client: Client, data: WSEvents['ForumTopicUnpinned']): Promise<void>;
/**
 * Handle the ForumTopicLocked event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function locked(client: Client, data: WSEvents['ForumTopicLocked']): Promise<void>;
/**
 * Handle the ForumTopicUnlocked event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function unlocked(client: Client, data: WSEvents['ForumTopicUnlocked']): Promise<void>;
//# sourceMappingURL=forumTopic.d.ts.map