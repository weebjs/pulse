import { WSEvents } from 'guilded-api-typings';
import { Client } from '../../structures/Client';
/**
 * Handle the ChatMessageCreated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function created(client: Client, data: WSEvents['ChatMessageCreated']): Promise<void>;
/**
 * Handle the ChatMessageUpdated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function updated(client: Client, data: WSEvents['ChatMessageUpdated']): Promise<void>;
/**
 * Handle the ChatMessageDeleted event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function deleted(client: Client, data: WSEvents['ChatMessageDeleted']): Promise<void>;
/**
 * Handle the ChannelMessageReactionCreated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function reactionCreated(client: Client, data: WSEvents['ChannelMessageReactionCreated']): Promise<void>;
/**
 * Handle the ChannelMessageReactionDeleted event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function reactionDeleted(client: Client, data: WSEvents['ChannelMessageReactionDeleted']): Promise<void>;
//# sourceMappingURL=message.d.ts.map