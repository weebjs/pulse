import { WSEvents } from 'guilded-api-typings';
import { Client } from '../../structures/Client';
/**
 * Handle the ServerMemberJoined event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function joined(client: Client, data: WSEvents['ServerMemberJoined']): Promise<void>;
/**
 * Handle the ServerMemberRemoved event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function removed(client: Client, data: WSEvents['ServerMemberRemoved']): Promise<void>;
/**
 * Handle the ServerMemberBanned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function banned(client: Client, data: WSEvents['ServerMemberBanned']): Promise<void>;
/**
 * Handle the ServerMemberUnbanned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function unbanned(client: Client, data: WSEvents['ServerMemberUnbanned']): Promise<void>;
/**
 * Handle the ServerMemberUpdated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function updated(client: Client, data: WSEvents['ServerMemberUpdated']): Promise<void>;
//# sourceMappingURL=serverMember.d.ts.map