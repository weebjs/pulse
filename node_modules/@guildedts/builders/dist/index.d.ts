export * from './Embed';
export * from '@guildedts/util';
/**
 * Create bold text.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example bold('bold text'); // '**bold text**'
 */
export declare const bold: <T extends string>(text: T) => `**${T}**`;
/**
 * Create italic text.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example italic('italic text'); // '*italic text*'
 */
export declare const italic: <T extends string>(text: T) => `*${T}*`;
/**
 * Create a spoiler.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example spoiler('spoiler text'); // '||spoiler text||'
 */
export declare const spoiler: <T extends string>(text: T) => `||${T}||`;
/**
 * Underline text.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example underline('underlined text'); // '__underlined text__'
 */
export declare const underline: <T extends string>(text: T) => `__${T}__`;
/**
 * Strikethrough text.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example strikethrough('strikethrough text'); // '~~strikethrough text~~'
 */
export declare const strikeThrough: <T extends string>(text: T) => `~~${T}~~`;
/**
 * Create inline code.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example inlineCode('inline code'); // '`inline code`'
 */
export declare const inlineCode: <T extends string>(text: T) => `\`${T}\``;
/**
 * Create a divider
 * @param newLine Whether to create a new line.
 * @returns The formatted text.
 * @example
 * // Create a divider
 * divider(); // '---'
 * // Create a divider with a new line
 * divider(true); // '\n---\n'
 */
export declare const divider: <NL extends boolean>(newLine?: NL) => NL extends true ? "\n---\n" : "---";
/**
 * Create a big heading.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example h1('big heading'); // '# big heading'
 */
export declare const h1: <T extends string>(text: T) => `# ${T}`;
/**
 * Create a medium heading.
 * @param text The text to be formatted.
 * @returns The formatted text.
 * @example h2('medium heading'); // '## medium heading'
 */
export declare const h2: <T extends string>(text: T) => `## ${T}`;
/**
 * Create a user mention.
 * @param userId The ID of the user to mention.
 * @returns The formatted text.
 * @example userMention('abc'); // '<@abc>'
 */
export declare const userMention: <U extends string>(userId: U) => `<@${U}>`;
//# sourceMappingURL=index.d.ts.map