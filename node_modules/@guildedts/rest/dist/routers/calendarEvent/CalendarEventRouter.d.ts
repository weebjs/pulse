import { APICalendarEvent, APICalendarEventEditPayload, APICalendarEventPayload, APICalendarEventFetchManyOptions } from 'guilded-api-typings';
import { BaseRouter } from '../BaseRouter';
/**
 * The calendar event router for the Guilded REST API.
 * @example new CalendarEventRouter(rest);
 */
export declare class CalendarEventRouter extends BaseRouter {
    /**
     * Fetch a calendar event from Guilded.
     * @param channelId The ID of the channel the calendar event belongs to.
     * @param calendarEventId The ID of the calendar event to fetch.
     * @returns The fetched calendar event.
     * @example calendarEvents.fetch('abc', 123);
     */
    fetch(channelId: string, calendarEventId: number): Promise<APICalendarEvent>;
    /**
     * Fetch calendar events from Guilded.
     * @param channelId The ID of the channel the calendar events belong to.
     * @param options The options to fetch calendar events with.
     * @returns The fetched calendar events.
     * @example calendarEvents.fetch('abc');
     */
    fetch(channelId: string, options?: APICalendarEventFetchManyOptions): Promise<APICalendarEvent[]>;
    /** @ignore */
    private fetchSingle;
    /** @ignore */
    private fetchMany;
    /**
     * Create a calendar event on Guilded.
     * @param channelId The ID of the channel the calendar event belongs to.
     * @param payload The payload of the calendar event.
     * @returns The created calendar event.
     * @example calendarEvents.create('abc', { name: 'Event!' });
     */
    create(channelId: string, payload: APICalendarEventPayload): Promise<APICalendarEvent>;
    /**
     * Edit a calendar event on Guilded.
     * @param channelId The ID of the channel the calendar event belongs to.
     * @param calendarEventId The ID of the calendar event to edit.
     * @param payload The payload of the calendar event.
     * @returns The edited calendar event.
     * @example calendarEvents.edit('abc', 123, { name: 'Event!' });
     */
    edit(channelId: string, calendarEventId: number, payload: APICalendarEventEditPayload): Promise<APICalendarEvent>;
    /**
     * Delete a calendar event from Guilded.
     * @param channelId The ID of the channel the calendar event belongs to.
     * @param calendarEventId The ID of the calendar event to delete.
     * @example calendarEvents.delete('abc', 123);
     */
    delete(channelId: string, calendarEventId: number): Promise<void>;
}
//# sourceMappingURL=CalendarEventRouter.d.ts.map