"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocRouter = void 0;
const guilded_api_typings_1 = require("guilded-api-typings");
const BaseRouter_1 = require("./BaseRouter");
/**
 * The doc router for the Guilded REST API.
 * @example new DocRouter(rest);
 */
class DocRouter extends BaseRouter_1.BaseRouter {
    /** @ignore */
    fetch(channelId, docIdOrOptions) {
        if (typeof docIdOrOptions === 'number')
            return this.fetchSingle(channelId, docIdOrOptions);
        return this.fetchMany(channelId, docIdOrOptions);
    }
    /** @ignore */
    async fetchSingle(channelId, docId) {
        const { doc } = await this.rest.get(guilded_api_typings_1.Routes.doc(channelId, docId));
        return doc;
    }
    /** @ignore */
    async fetchMany(channelId, options) {
        const { docs } = await this.rest.get(guilded_api_typings_1.Routes.docs(channelId), options);
        return docs;
    }
    /**
     * Create a doc on Guilded.
     * @param channelId The ID of the channel the doc belongs to.
     * @param title The title of the doc.
     * @param content The content of the doc.
     * @returns The created doc.
     * @example docs.create('abc', 'My Doc', 'This is my doc.');
     */
    async create(channelId, title, content) {
        const { doc } = await this.rest.post(guilded_api_typings_1.Routes.docs(channelId), { title, content });
        return doc;
    }
    /**
     * Edit a doc on Guilded.
     * @param channelId The ID of the channel the doc belongs to.
     * @param docId The ID of the doc to edit.
     * @param title The title of the doc.
     * @param content The content of the doc.
     * @returns The edited doc.
     * @example docs.edit('abc', 123, 'My Doc', 'This is my doc.');
     */
    async edit(channelId, docId, title, content) {
        const { doc } = await this.rest.put(guilded_api_typings_1.Routes.doc(channelId, docId), { title, content });
        return doc;
    }
    /**
     * Delete a doc from Guilded.
     * @param channelId The ID of the channel the doc belongs to.
     * @param docId The ID of the doc to delete.
     * @example docs.delete('abc', 123);
     */
    delete(channelId, docId) {
        return this.rest.delete(guilded_api_typings_1.Routes.doc(channelId, docId));
    }
}
exports.DocRouter = DocRouter;
//# sourceMappingURL=DocRouter.js.map