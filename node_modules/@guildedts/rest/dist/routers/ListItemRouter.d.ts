import { APIListItem } from 'guilded-api-typings';
import { BaseRouter } from './BaseRouter';
/**
 * The list item router for the Guilded REST API.
 * @example new ListItemRouter(rest);
 */
export declare class ListItemRouter extends BaseRouter {
    /**
     * Fetch a list item from Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param listItemId The ID of the list item to fetch.
     * @returns The fetched list item.
     * @example listItems.fetch('abc', 'abc');
     */
    fetch(channelId: string, listItemId: string): Promise<APIListItem>;
    /**
     * Fetch list items from Guilded.
     * @param channelId The ID of the channel the list items belong to.
     * @returns The fetched list items.
     * @example listItems.fetch('abc');
     */
    fetch(channelId: string): Promise<APIListItem[]>;
    /** @ignore */
    private fetchSingle;
    /** @ignore */
    private fetchMany;
    /**
     * Create a list item on Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param message The message of the list item.
     * @param note The note of the list item.
     * @returns The created list item.
     * @example listItems.create('abc', 'Random item');
     */
    create(channelId: string, message: string, note?: string): Promise<APIListItem>;
    /**
     * Edit a list item on Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param listItemId The ID of the list item to edit.
     * @param message The message of theb list item.
     * @param note The note of the list item.
     * @returns The edited list item.
     * @example listItems.edit('abc', 'abc', 'Random item');
     */
    edit(channelId: string, listItemId: string, message: string, note?: string): Promise<APIListItem>;
    /**
     * Delete a list item from Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param listItemId The ID of the list item to delete.
     * @example listItems.delete('abc', 'abc');
     */
    delete(channelId: string, listItemId: string): Promise<void>;
    /**
     * Complete a list item on Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param listItemId The ID of the list item to complete.
     * @example listItems.complete('abc', 'abc');
     */
    complete(channelId: string, listItemId: string): Promise<void>;
    /**
     * Uncomplete a list item on Guilded.
     * @param channelId The ID of the channel the list item belongs to.
     * @param listItemId The ID of the list item to uncomplete.
     * @example listItems.uncomplete('abc', 'abc');
     */
    uncomplete(channelId: string, listItemId: string): Promise<void>;
}
//# sourceMappingURL=ListItemRouter.d.ts.map