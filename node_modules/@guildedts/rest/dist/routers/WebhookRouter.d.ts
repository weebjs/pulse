import { APIWebhook, APIWebhookMessagePayloadResolvable } from 'guilded-api-typings';
import { BaseRouter } from './BaseRouter';
/**
 * The webhook router for the Guilded REST API.
 * @example new WebhookRouter(rest);
 */
export declare class WebhookRouter extends BaseRouter {
    /**
     * Fetch a webhook from Guilded.
     * @param serverId The ID of the server the webhook belongs to.
     * @param webhookId The ID of the webhook to fetch.
     * @returns The fetched webhook.
     * @example webhooks.fetchSingle('abc', 'abc');
     */
    fetchSingle(serverId: string, webhookId: string): Promise<APIWebhook>;
    /**
     * Fetch webhooks from Guilded.
     * @param serverId The ID of the server the webhooks belong to.
     * @param channelId The ID of the channel to fetch webhooks from.
     * @returns The fetched webhooks.
     * @example webhooks.fetchMany('abc', 'abc');
     */
    fetchMany(serverId: string, channelId: string): Promise<APIWebhook[]>;
    /**
     * Create a webhook message on Guilded.
     * @param webhookId The ID of the webhook.
     * @param webhookToken The token of the webhook.
     * @param payload The payload of the message.
     * @example webhooks.send('abc', 'abc', 'Hello world!');
     */
    send(webhookId: string, webhookToken: string, payload: APIWebhookMessagePayloadResolvable): Promise<void>;
    /**
     * Create a webhook on Guilded.
     * @param serverId The ID of the server the webhook belongs to.
     * @param channelId The ID of the channel the webhook belongs to.
     * @param name The name of the webhook.
     * @returns The created webhook.
     * @example webhooks.create('abc', 'abc', 'Webhook');
     */
    create(serverId: string, channelId: string, name: string): Promise<APIWebhook>;
    /**
     * Edit a webhook on Guilded.
     * @param serverId The ID of the server the webhook belongs to.
     * @param webhookId The ID of the webhook to edit.
     * @param name The name of the webhook.
     * @param channelId The ID of the channel the webhook belongs to.
     * @returns The edited webhook.
     * @example webhooks.edit('abc', 'abc', 'Webhook');
     */
    edit(serverId: string, webhookId: string, name: string, channelId?: string): Promise<APIWebhook>;
    /**
     * Delete a webhook from Guilded.
     * @param serverId The ID of the server the webhook belongs to.
     * @param webhookId The ID of the webhook to delete.
     * @example webhooks.delete('abc', 'abc');
     */
    delete(serverId: string, webhookId: string): Promise<void>;
}
//# sourceMappingURL=WebhookRouter.d.ts.map