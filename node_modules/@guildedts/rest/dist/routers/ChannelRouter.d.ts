import { APIChannel, APIChannelEditPayload, APIChannelPayload } from 'guilded-api-typings';
import { BaseRouter } from './BaseRouter';
/**
 * The channel router for the Guilded REST API.
 * @example new ChannelRouter(rest);
 */
export declare class ChannelRouter extends BaseRouter {
    /**
     * Fetch a channel from Guilded.
     * @param channelId The ID of the channel to fetch.
     * @returns The fetched channel.
     * @example channels.fetch('abc');
     */
    fetch(channelId: string): Promise<APIChannel>;
    /**
     * Create a channel on Guilded.
     * @param payload The payload of the channel.
     * @returns The created channel.
     * @example channels.create({ name: 'Chat', type: 'chat' });
     */
    create(payload: APIChannelPayload): Promise<APIChannel>;
    /**
     * Edit a channel on Guilded.
     * @param channelId The ID of the channel to edit.
     * @param payload The payload of the channel.
     * @returns The edited channel.
     * @example channels.edit('abc', { name: 'Chat' });
     */
    edit(channelId: string, payload: APIChannelEditPayload): Promise<APIChannel>;
    /**
     * Delete a channel from Guilded.
     * @param channelId The ID of the channel to delete.
     * @example channels.delete('abc');
     */
    delete(channelId: string): Promise<void>;
}
//# sourceMappingURL=ChannelRouter.d.ts.map