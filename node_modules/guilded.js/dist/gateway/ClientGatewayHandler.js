"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientGatewayHandler = void 0;
const MessageEventHandler_1 = require("./handler/MessageEventHandler");
const ServerEventHandler_1 = require("./handler/ServerEventHandler");
const ServerMemberEventHandler_1 = require("./handler/ServerMemberEventHandler");
const guilded_api_typings_1 = require("@guildedjs/guilded-api-typings");
const ServerWebhookEventHandler_1 = require("./handler/ServerWebhookEventHandler");
const ListEventHandler_1 = require("./handler/ListEventHandler");
const ServerChannelEventHandler_1 = require("./handler/ServerChannelEventHandler");
const DocEventHandler_1 = require("./handler/DocEventHandler");
const ReactionEventHandler_1 = require("./handler/ReactionEventHandler");
const CalendarEventHandler_1 = require("./handler/CalendarEventHandler");
const ForumEventHandler_1 = require("./handler/ForumEventHandler");
const BotEventHandler_1 = require("./handler/BotEventHandler");
class ClientGatewayHandler {
    constructor(client) {
        this.client = client;
        this.calendarEventHandler = new CalendarEventHandler_1.CalendarEventHandler(this.client);
        this.calendarEventRsvpHandler = new CalendarEventHandler_1.CalendarEventRsvpHandler(this.client);
        this.messageHandler = new MessageEventHandler_1.MessageEventHandler(this.client);
        this.ServerHandler = new ServerEventHandler_1.ServerEventHandler(this.client);
        this.ServerMemberHandler = new ServerMemberEventHandler_1.ServerMemberEventHandler(this.client);
        this.ServerWebhookHandler = new ServerWebhookEventHandler_1.ServerWebhookEventHandler(this.client);
        this.listHandler = new ListEventHandler_1.ListEventHandler(this.client);
        this.ServerChannelHandler = new ServerChannelEventHandler_1.ServerChannelEventHandler(this.client);
        this.docHandler = new DocEventHandler_1.DocEventHandler(this.client);
        this.reactionHandler = new ReactionEventHandler_1.ReactionEventHandler(this.client);
        this.forumHandler = new ForumEventHandler_1.ForumEventHandler(this.client);
        this.botHandler = new BotEventHandler_1.BotEventHandler(this.client);
        this.eventToHandlerMap = {
            [guilded_api_typings_1.WebSocketEvents.CalendarEventCreated]: (data) => this.calendarEventHandler.calendarEventCreated(data),
            [guilded_api_typings_1.WebSocketEvents.CalendarEventDeleted]: (data) => this.calendarEventHandler.calendarEventDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.CalendarEventUpdated]: (data) => this.calendarEventHandler.calendarEventUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.CalendarEventRsvpUpdated]: (data) => this.calendarEventRsvpHandler.calendarEventRsvpUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.CalendarEventRsvpManyUpdated]: (data) => this.calendarEventRsvpHandler.calendarEventRsvpManyUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.CalendarEventRsvpDeleted]: (data) => this.calendarEventRsvpHandler.calendarEventRsvpDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ChatMessageCreated]: (data) => this.messageHandler.messageCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ChatMessageDeleted]: (data) => this.messageHandler.messageDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ChatMessageUpdated]: (data) => this.messageHandler.messageUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerMemberJoined]: (data) => this.ServerMemberHandler.serverMemberJoined(data),
            [guilded_api_typings_1.WebSocketEvents.ServerMemberRemoved]: (data) => this.ServerMemberHandler.serverMemberRemoved(data),
            [guilded_api_typings_1.WebSocketEvents.ServerMemberUpdated]: (data) => this.ServerMemberHandler.serverMemberUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerRolesUpdated]: (data) => this.ServerHandler.serverRolesUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerMemberBanned]: (data) => this.ServerMemberHandler.serverMemberBanned(data),
            [guilded_api_typings_1.WebSocketEvents.ServerMemberUnbanned]: (data) => this.ServerMemberHandler.serverMemberUnbanned(data),
            [guilded_api_typings_1.WebSocketEvents.ServerWebhookCreated]: (data) => this.ServerWebhookHandler.serverWebhookCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerWebhookUpdated]: (data) => this.ServerWebhookHandler.serverWebhookUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.BotServerMembershipCreated]: (data) => this.botHandler.botServerMembershipCreated(data),
            [guilded_api_typings_1.WebSocketEvents.BotServerMembershipDeleted]: (data) => this.botHandler.botServerMembershipDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ListItemCompleted]: (data) => this.listHandler.listItemCompleted(data),
            [guilded_api_typings_1.WebSocketEvents.ListItemUncompleted]: (data) => this.listHandler.listItemUncompleted(data),
            [guilded_api_typings_1.WebSocketEvents.ListItemCreated]: (data) => this.listHandler.listItemCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ListItemUpdated]: (data) => this.listHandler.listItemUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ListItemDeleted]: (data) => this.listHandler.listItemDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.DocCreated]: (data) => this.docHandler.docCreated(data),
            [guilded_api_typings_1.WebSocketEvents.DocDeleted]: (data) => this.docHandler.docDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.DocUpdated]: (data) => this.docHandler.docUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerChannelCreated]: (data) => this.ServerChannelHandler.serverChannelCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ServerChannelDeleted]: (data) => this.ServerChannelHandler.serverChannelDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ServerChannelUpdated]: (data) => this.ServerChannelHandler.serverChannelUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ChannelMessageReactionCreated]: (data) => this.reactionHandler.messageReactionCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ChannelMessageReactionDeleted]: (data) => this.reactionHandler.messageReactionDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicCreated]: (data) => this.forumHandler.forumTopicCreated(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicDeleted]: (data) => this.forumHandler.forumTopicDeleted(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicUpdated]: (data) => this.forumHandler.forumTopicUpdated(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicPinned]: (data) => this.forumHandler.forumTopicPinned(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicUnpinned]: (data) => this.forumHandler.forumTopicUnpinned(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicLocked]: (data) => this.forumHandler.forumTopicLocked(data),
            [guilded_api_typings_1.WebSocketEvents.ForumTopicUnlocked]: (data) => this.forumHandler.forumTopicUnlocked(data),
        };
    }
    handleWSMessage(event, data) {
        var _a, _b, _c;
        (_c = (_b = (_a = this.eventToHandlerMap)[event]) === null || _b === void 0 ? void 0 : _b.call(_a, data)) !== null && _c !== void 0 ? _c : this.client.emit("unknownGatewayEvent", data);
    }
}
exports.ClientGatewayHandler = ClientGatewayHandler;
//# sourceMappingURL=ClientGatewayHandler.js.map